"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Base_1 = __importDefault(require("./Base"));
class Tiktok extends Base_1.default {
    constructor(apikey) {
        super(apikey);
    }
    /**
     *
     * @param url Tiktok url
     * @param path Path to save
     * @returns Stream url to download
     */
    video(url, path) {
        let { writeStream, axios, ApiURLv2, apikey, version } = this;
        return new Promise(function (resolve, reject) {
            axios.get(`${ApiURLv2}/tiktok`, {
                params: {
                    url: url,
                    apikey: apikey,
                    version: version
                }
            }).then(function ({ data }) {
                if (path && data.success)
                    return writeStream(data.video_url, path, resolve, reject);
                return resolve(!data.success ? data : {
                    success: true,
                    data: data.video_url
                });
            }).catch(function (error) {
                return reject(error);
            });
        });
    }
    /**
   *
   * @param url Tiktok url
   * @param path Path to save
   * @returns Stream url to download
   */
    audio(url, path) {
        let { writeStream, axios, ApiURLv2, apikey, version } = this;
        return new Promise(function (resolve, reject) {
            axios.get(`${ApiURLv2}/tiktok`, {
                params: {
                    url: url,
                    apikey: apikey,
                    version: version
                }
            }).then(function ({ data }) {
                if (path && data.success)
                    return writeStream(data.audio_url, path, resolve, reject);
                return resolve(!data.success ? data : {
                    success: true,
                    data: data.audio_url
                });
            }).catch(function (error) {
                return reject(error);
            });
        });
    }
}
exports.default = Tiktok;
