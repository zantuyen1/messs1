"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Base_1 = __importDefault(require("./Base"));
const form_data_1 = __importDefault(require("form-data"));
class Facebook extends Base_1.default {
    constructor(apikey) {
        super(apikey);
    }
    /**
     *
     * @param userID Facebook ID
     * @param path path to save image
     * @returns Buffer | undefined
     */
    avatar(userID, path) {
        let { writeFile, axios, ApiURLv2, apikey, version } = this;
        return new Promise(function (resolve, reject) {
            axios.get(`${ApiURLv2}/avatar`, {
                params: {
                    id: userID,
                    apikey: apikey,
                    version: version
                }
            }).then(function ({ data }) {
                if (path && data.success)
                    return writeFile(data.data, path, resolve, reject);
                return resolve(data);
            }).catch(function (error) {
                return reject(error);
            });
        });
    }
    /**
     *
     * @param url Profile facebook url
     * @param fcaApi API from Facebook chat api
     * @returns [uid, isValid]
     */
    uid(url, fcaApi) {
        const urlData = new URL(url);
        const regex = /.+id=(\d+)$/i;
        var _ = this;
        return new Promise(async function (resolve) {
            if (!isNaN(url))
                return resolve([url, true]);
            if (regex.test(url))
                return resolve([regex.exec(url)[1], true]);
            var form = new form_data_1.default();
            form.append('link', urlData.href);
            var { body } = await _.got.post('https://id.traodoisub.com/api.php', { body: form });
            var id = JSON.parse(body).id;
            if (id)
                return resolve([id, true]);
            if (fcaApi) {
                var data = await fcaApi.httpGet(url);
                id = (data.split('"userID":"')[1] || '",').split('",')[0] || undefined;
                if (id)
                    return resolve([id, true]);
                else
                    return resolve([undefined, false]);
            }
            return resolve([undefined, false]);
        });
    }
}
exports.default = Facebook;
